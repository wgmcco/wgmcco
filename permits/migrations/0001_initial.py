# Generated by Django 3.0.5 on 2020-04-08 23:56

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('address', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=150)),
                ('st', models.CharField(max_length=150)),
                ('zipcode', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('fax', models.CharField(max_length=20)),
                ('email', models.EmailField(default='unk@unk.com', max_length=150)),
                ('website', models.CharField(blank=True, max_length=200)),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=150)),
                ('lastname', models.CharField(blank=True, max_length=150)),
                ('address', models.CharField(blank=True, max_length=150)),
                ('city', models.CharField(blank=True, max_length=150)),
                ('st', models.CharField(blank=True, max_length=150)),
                ('zipcode', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('fax', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('ss', models.CharField(blank=True, max_length=9)),
                ('emergence_name', models.CharField(blank=True, max_length=20)),
                ('emergence_phone', models.CharField(blank=True, max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('employer', models.CharField(blank=True, max_length=20)),
                ('experience', models.TextField(blank=True)),
                ('dob', models.DateTimeField()),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('address', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=150)),
                ('st', models.CharField(max_length=150)),
                ('zipcode', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('fax', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=150)),
                ('website', models.CharField(max_length=200)),
                ('ein_ss', models.CharField(max_length=9)),
                ('business_lic', models.CharField(max_length=9)),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('contact_name', models.ForeignKey(default='8', on_delete=django.db.models.deletion.CASCADE, to='permits.ContactProfile')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='VehicleProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eq_number', models.CharField(max_length=150, unique=True)),
                ('make', models.CharField(max_length=150)),
                ('model', models.CharField(max_length=150)),
                ('year', models.CharField(max_length=150)),
                ('lic', models.CharField(max_length=150)),
                ('vin', models.CharField(max_length=150)),
                ('veh_type', models.CharField(choices=[('SU', 'Super Dump'), ('LB', 'Low Bed'), ('SW', 'Sweeper'), ('WT', 'Water Truck'), ('FB', 'Flat Bed')], max_length=2)),
                ('description', models.CharField(max_length=150)),
                ('attached_to', models.CharField(max_length=150)),
                ('status', models.CharField(max_length=150)),
                ('mileage', models.CharField(max_length=150)),
                ('hours', models.CharField(max_length=150)),
                ('color', models.CharField(max_length=150)),
                ('length', models.CharField(max_length=150)),
                ('width', models.CharField(max_length=150)),
                ('height', models.CharField(max_length=150)),
                ('wheelbase', models.CharField(max_length=150)),
                ('gvw', models.CharField(max_length=150)),
                ('engine_size', models.PositiveSmallIntegerField(choices=[(8, '8 Cylinder'), (6, '6 Cylinder'), (4, '4 Cylinder')], default=8)),
                ('transmission', models.CharField(choices=[('A', 'Automatic'), ('S', 'Standard')], max_length=1)),
                ('axle', models.PositiveSmallIntegerField(choices=[(2, '2 axles'), (3, '3 axles'), (4, '4 axles')], default=2)),
                ('front_size', models.CharField(max_length=150)),
                ('rear_size', models.CharField(max_length=150)),
                ('image', models.FileField(blank=True, upload_to='image/')),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.ContactProfile')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.CustomerProfile')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
            },
        ),
        migrations.CreateModel(
            name='PermitProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permit_cn', models.CharField(max_length=150, unique=True, verbose_name='Permit number')),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('permit_class', models.CharField(max_length=150)),
                ('pdf', models.FileField(blank=True, upload_to='pdfs/')),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('agency_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='permits.AgencyProfile')),
                ('customer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.CustomerProfile')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='permits.ContactProfile')),
                ('eq_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.VehicleProfile')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_number', models.CharField(max_length=50)),
                ('cert_type', models.CharField(choices=[('WC', 'Work Comp'), ('GL', 'General Liability'), ('AT', 'Auto'), ('UM', 'Umbrella')], max_length=2)),
                ('policy_number', models.CharField(max_length=150)),
                ('expires', models.DateTimeField()),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.CustomerProfile')),
            ],
        ),
        migrations.AddIndex(
            model_name='contactprofile',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='permits_con_search__d2b696_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='contactprofile',
            unique_together={('firstname', 'lastname')},
        ),
        migrations.AddField(
            model_name='agencyprofile',
            name='point_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permits.ContactProfile'),
        ),
        migrations.AddIndex(
            model_name='vehicleprofile',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='permits_veh_search__8cab8a_gin'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='permits_cus_search__8cd7d1_gin'),
        ),
    ]
